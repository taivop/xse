

<project name="POS" default="dist" basedir=".">
	<description>
		TRA tarkvaratehnika POS project
	</description>

	<!-- Set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib.dir" location="lib" />
	<property name="etc.dir" location="lib" />


	<!-- Compilation classpath -->
	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Run classpath -->
	<path id="run.classpath">
		<pathelement location="${build}" />
		<pathelement location="." />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${etc.dir}">
			<include name="log4j.dtd" />
			<include name="log4j.xml" />
		</fileset>
	</path>

	<!-- Test classpath -->
	<path id="test.classpath">
		<pathelement location="${build}" />
		<pathelement location="." />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${etc.dir}">
			<include name="log4j.dtd" />
			<include name="log4j.xml" />
		</fileset>
	</path>

	<target name="init">
		<!-- Create time stamp -->
		<tstamp />
		<!-- Create build directory structure used by compile -->
		<mkdir dir="${build}" />
		<!-- Update application.properties -->
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="build" description="compile the source" depends="init">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpathref="compile.classpath">
		</javac>
	</target>

	<target name="run" depends="build">
		<!-- Run the Intro class -->
		<java classname="ee.ut.math.tvt.TRAtarkvaratehnika.Intro" classpathref="run.classpath" fork="true">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.TRAtarkvaratehnika.Intro" classpathref="test.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="dist" depends="build" description="generate the distribution">

		<!-- Create the distribution directory -->
		<mkdir dir="${build}/jar" />

		<!-- Create manifest file-->
		<manifestclasspath property="lib.list" jarfile="${build}/jar/TRAtarkvaratehnika.jar">
			<classpath path="${build}">
				<pathelement path="lib/log4j-1.2.17.jar" />
				<pathelement path="etc" />
			</classpath>
		</manifestclasspath>
		<manifest file="${build}/MANIFEST.MF">
			<attribute name="Main-Class" value="ee/ut/math/tvt/TRAtarkvaratehnika/Intro" />
			<attribute name="Class-Path" value="${lib.list}" />
		</manifest>

		<!-- Put everything in ${build} into the jar file-->
		<jar jarfile="${build}/jar/TRAtarkvaratehnika.jar" manifest="${build}/MANIFEST.MF" basedir="${build}" excludes="jar/TRAtarkvaratehnika.jar">
		</jar>

		<!-- update properties where necessary -->
		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.minor.number" type="int" default="0" />
			<entry key="build.major.number" type="int" default="0" />
			<entry key="build.revision.number" type="int" default="0" operation="+" />
		</propertyfile>

		<!-- read properties file -->
		<loadproperties srcFile="version.properties" />

		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.number" operation="=" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
		</propertyfile>
	</target>

	<target name="jrun" depends="build">
		<java jar="${build}/jar/TRAtarkvaratehnika.jar" fork="true" />
	</target>

	<target name="git_commit">
		<!-- Prompt for commit message -->
		<input message="Commit message:" addproperty="commit-message" />
		<!-- Add all changed files to commit -->
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
			<arg value=":/" />
		</exec>
		<!-- Commit changes -->
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m" />
			<arg value="${commit-message}" />
		</exec>

		<!-- Prompt for username and password-->
		<input message="Username:" addproperty="commit-username" />
		<input message="Password:" addproperty="commit-password" />

		<!-- Push to GitHub -->
		<exec executable="git">
			<arg value="push" />
			<arg value="https://${commit-username}:${commit-password}@github.com/andoh/the-4-horsemen.git" />
			<arg value="master" />
		</exec>
	</target>


</project>